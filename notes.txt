User Stories (MVP):
A user can create a new category and add a description to it (think subreddits on reddit)
A user can create a new forum post in a given category (/categories/category-name/posts/new)
A user can delete a category if there are no posts associated with it
A user can show (ie, see) a given forum post
A user can see all of the forum's posts as a feed, up to a maximum of ten (/posts)
A user can browse successive pages of ten posts each, until the beginning of the feed (/posts?id=id-of-first-post)
A user can write a forum post as markdown and have it rendered as HTML
A user can browse forum posts by category
A user can "upvote" a forum post
A user can "upvote" a category
A user can see the "vote totals" of a given forum post or category
A user can "downvote" a forum post or category
A user can add a time-to-live to a forum post, so that it expires after a given period
A user can see, but not interact with, an expired post
A user can subscribe to a category or post and receive updates to it via text or email (using Twilio/Sendgrid)
This text message or email can be pretty succinct, such as including the title of an updated post/category along with a link to it

Routes:

get("/") 
	redirects to posts

get("/posts")  
	shows a feed of 10 
	has a form to upvote, downvote, or create subscription
	has a link called Comments that leads to "/posts/:id"
	has a link to the post's category that links to get("/categories/:name/
 
get("/posts?id=:id") 
		shows the next page of 10 posts
		has a form to upvote, downvote, or create subscription

get("/posts/:id")
	shows individual post
	shows comments
	For active posts:
		has a form to upvote, downvote, or create subscription
		has a form to comment
	For expired posts:
		show post on a different erb without form, says it's expired


get("/categories") 
	has a form to create a new category
	allows user to see all categories, and the number of posts associated with them
	has a form to upvote, downvote, or create subscription
	has a button to delete categories where Posts.where(category_id: category.id).length = 0

post("/categories")
	creates a new category
	redirects to "/categories"

delete("/categories")
	deletes a category
	redirects to "/categories"

get("/categories/:name/posts")
	shows all posts belonging to a specific category
	has a form to upvote, downvote, or create subscription
	links to ("/categories/:name/posts/new")


get("/categories/:name/posts/new")
	has a form that allows you to create a new post and set an expiration date belonging to that category


post("/categories/:name/posts")
	creates new post and redirects to "/categories/:name/posts"

get("posts/archive") 
	shows all expired posts
	each post has a link to "/posts/:id"

get("/most_popular/") 
	shows the top 5 most popular categories

post("/subscription")
	creates new subscription
	shows subscription confirmation page





